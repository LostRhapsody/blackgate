#!/bin/bash

# Blackgate Production Deployment Script
# This script helps deploy Blackgate with configurable resource limits

set -e

# Default values
DEFAULT_CPU_LIMIT="1.0"
DEFAULT_MEMORY_LIMIT="1G"
DEFAULT_CPU_RESERVATION="0.5"
DEFAULT_MEMORY_RESERVATION="512M"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Function to print colored output
print_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Function to show usage
show_usage() {
    echo "Usage: $0 [OPTIONS]"
    echo ""
    echo "Deploy Blackgate with configurable resource limits"
    echo ""
    echo "Options:"
    echo "  -c, --cpu-limit CPU         Set CPU limit (default: $DEFAULT_CPU_LIMIT)"
    echo "  -m, --memory-limit MEMORY   Set memory limit (default: $DEFAULT_MEMORY_LIMIT)"
    echo "  -r, --cpu-reservation CPU   Set CPU reservation (default: $DEFAULT_CPU_RESERVATION)"
    echo "  -R, --memory-reservation MEM Set memory reservation (default: $DEFAULT_MEMORY_RESERVATION)"
    echo "  -h, --help                  Show this help message"
    echo ""
    echo "Examples:"
    echo "  $0                                    # Deploy with defaults"
    echo "  $0 -c 2.0 -m 2G                     # Deploy with 2 CPUs and 2GB memory"
    echo "  $0 --cpu-limit 0.5 --memory-limit 512M  # Deploy with minimal resources"
    echo ""
    echo "Resource format examples:"
    echo "  CPU: 0.5, 1.0, 2.0 (number of cores)"
    echo "  Memory: 512M, 1G, 2G (M=megabytes, G=gigabytes)"
}

# Parse command line arguments
CPU_LIMIT="$DEFAULT_CPU_LIMIT"
MEMORY_LIMIT="$DEFAULT_MEMORY_LIMIT"
CPU_RESERVATION="$DEFAULT_CPU_RESERVATION"
MEMORY_RESERVATION="$DEFAULT_MEMORY_RESERVATION"

while [[ $# -gt 0 ]]; do
    case $1 in
        -c|--cpu-limit)
            CPU_LIMIT="$2"
            shift 2
            ;;
        -m|--memory-limit)
            MEMORY_LIMIT="$2"
            shift 2
            ;;
        -r|--cpu-reservation)
            CPU_RESERVATION="$2"
            shift 2
            ;;
        -R|--memory-reservation)
            MEMORY_RESERVATION="$2"
            shift 2
            ;;
        -h|--help)
            show_usage
            exit 0
            ;;
        *)
            print_error "Unknown option: $1"
            show_usage
            exit 1
            ;;
    esac
done

# Check if docker and docker-compose are available
if ! command -v docker &> /dev/null; then
    print_error "Docker is not installed or not in PATH"
    exit 1
fi

if ! command -v docker-compose &> /dev/null && ! docker compose version &> /dev/null; then
    print_error "Docker Compose is not installed or not in PATH"
    exit 1
fi

# Check if production compose file exists
if [ ! -f "docker-compose.production.yml" ]; then
    print_error "docker-compose.production.yml not found in current directory"
    exit 1
fi

# Display configuration
print_info "Deploying Blackgate with the following configuration:"
echo "  CPU Limit: $CPU_LIMIT"
echo "  Memory Limit: $MEMORY_LIMIT"
echo "  CPU Reservation: $CPU_RESERVATION"
echo "  Memory Reservation: $MEMORY_RESERVATION"
echo ""

# Create or update .env file
ENV_FILE=".env"
print_info "Creating/updating $ENV_FILE with resource configuration..."

cat > "$ENV_FILE" << EOF
# Blackgate Resource Configuration
# Generated by deploy.sh on $(date)

# CPU and Memory Limits
BLACKGATE_CPU_LIMIT=$CPU_LIMIT
BLACKGATE_MEMORY_LIMIT=$MEMORY_LIMIT
BLACKGATE_CPU_RESERVATION=$CPU_RESERVATION
BLACKGATE_MEMORY_RESERVATION=$MEMORY_RESERVATION

# Application Configuration
BLACKGATE_DB_URL=sqlite:///app/data/blackgate.db
RUST_LOG=blackgate=info,tower_http=debug
EOF

# Deploy with docker-compose
print_info "Deploying Blackgate..."

# Try docker compose first (newer syntax), fall back to docker-compose
if docker compose version &> /dev/null; then
    docker compose -f docker-compose.production.yml up -d
else
    docker-compose -f docker-compose.production.yml up -d
fi

if [ $? -eq 0 ]; then
    print_info "Blackgate deployed successfully!"
    echo ""
    print_info "Service will be available at: http://localhost:3000"
    print_info "Health check endpoint: http://localhost:3000/health"
    echo ""
    print_info "To view logs: docker compose -f docker-compose.production.yml logs -f"
    print_info "To stop: docker compose -f docker-compose.production.yml down"
else
    print_error "Deployment failed!"
    exit 1
fi
